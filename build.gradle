import java.time.Duration

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.21'
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.9.28'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'org.sokangaming'
version = '1.0-SNAPSHOT'

application {
    mainClassName = "Main"
    if (project.hasProperty('mainclass')) {
        mainClassName = project.properties['mainclass']
    }
}

repositories {
    mavenCentral()
}

kotlin {
    jvmToolchain(21)
}

jar {
    manifest {
        attributes('Main-Class': 'Main')
    }

}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    implementation 'com.formdev:flatlaf:3.2.5'
    implementation 'dev.dirs:directories:26'
    implementation 'org.apache.xmlgraphics:batik-transcoder:1.17'
}

graalvmNative {
    agent {
        defaultMode = 'standard'
    }
    metadataRepository {
        enabled = true
    }
    binaries {
        main {
            buildArgs.addAll(
                    '--no-fallback',
                    '--enable-https',
                    '-Djava.awt.headless=false',
            )
        }
        all {
            resources.autodetect()
        }
    }
}

tasks.register('instrument') {
    doLast {
        def p = './gradlew -Pagent run'.execute()
        p.waitForProcessOutput(System.out, System.err)
        if(p.exitValue() == 0) {
            Thread.sleep(Duration.ofSeconds(2))
            p = './gradlew metadataCopy --task run --dir src/main/resources/META-INF/native-image'.execute()
            p.waitForProcessOutput(System.out, System.err)
            if(p.exitValue() == 0) {
                p = './gradlew nativeCompile'.execute()
                p.waitForProcessOutput(System.out, System.err)
            }
        }
    }
}
